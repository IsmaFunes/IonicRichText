{"version":3,"file":"rich-text.component.js","sourceRoot":"","sources":["../../src/components/rich-text.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ViewChild, ElementRef, Input, OnInit } from '@angular/core';\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { TextInput } from 'ionic-angular';\r\n\r\nconst HTML = `<!-- https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand -->\r\n<div class=\"rich-text\">\r\n  <div #decorate class=\"decorator\">\r\n    <ion-buttons start [hidden]=\"!showDecorator && options.canClose\">\r\n        <button ion-button [hidden]=\"!options.undo\" data-command=\"undo\"><ion-icon name=\"undo\"></ion-icon></button>\r\n        <button ion-button [hidden]=\"!options.redo\" data-command=\"redo\"><ion-icon name=\"redo\"></ion-icon></button>\r\n        <button ion-button [hidden]=\"!options.bold\" data-command=\"bold\"><fa-icon icon=\"bold\"></fa-icon></button>\r\n        <button ion-button [hidden]=\"!options.italic\" data-command=\"italic\"><fa-icon icon=\"italic\"></fa-icon></button>\r\n        <button ion-button [hidden]=\"!options.underline\" data-command=\"underline\"><fa-icon icon=\"underline\"></fa-icon></button>\r\n        <button ion-button [hidden]=\"!options.strikethrough\" data-command=\"strikethrough\"><fa-icon icon=\"strikethrough\"></fa-icon></button>\r\n        <button ion-button [hidden]=\"!options.largeText\" data-command=\"fontSize|6\"><span style=\"font-size: 1.5em;\">A</span></button>\r\n        <button ion-button [hidden]=\"!options.largeText || !options.smallText\" data-command=\"removeFormat\"><span style=\"font-size: 1.0em;\">A</span></button>\r\n        <button ion-button [hidden]=\"!options.smallText\" data-command=\"fontSize|1\"><span style=\"font-size: 0.6em;\">A</span></button>\r\n        <button ion-button [hidden]=\"!options.alignLeft\" data-command=\"justifyLeft\"><fa-icon icon=\"align-left\"></fa-icon></button>\r\n        <button ion-button [hidden]=\"!options.alignCenter\" data-command=\"justifyCenter\"><fa-icon icon=\"align-center\"></fa-icon></button>\r\n        <button ion-button [hidden]=\"!options.alignRight\" data-command=\"justifyRight\"><fa-icon icon=\"align-right\"></fa-icon></button>\r\n        <button ion-button [hidden]=\"!options.justify\" data-command=\"justifyFull\"><fa-icon icon=\"align-justify\"></fa-icon></button>\r\n        <button ion-button [hidden]=\"!options.lineJump\" data-command=\"insertHorizontalRule\"><ion-icon name=\"return-left\"></ion-icon></button>\r\n        <button ion-button [hidden]=\"!options.orderedList\" data-command=\"insertOrderedList\"><fa-icon icon=\"list-ol\"></fa-icon></button>\r\n        <button ion-button [hidden]=\"!options.unorderedList\" data-command=\"insertUnorderedList\"><fa-icon icon=\"list-ul\"></fa-icon></button>\r\n  \r\n    </ion-buttons>\r\n    <ion-buttons end>\r\n      <button ion-button (click)=\"toggleDecorator()\" *ngIf=\"options.canClose\" float-right color=\"primary\">\r\n        <ion-icon [name]=\"showDecorator ? 'close' : 'create'\"></ion-icon>\r\n    </button>\r\n    </ion-buttons>\r\n  \r\n    </div>\r\n  \r\n  \r\n    <div #styler text-right>\r\n  \r\n  \r\n    </div>\r\n  \r\n    <ion-textarea #editor contenteditable=\"true\" style=\"-webkit-user-select:text; user-select:text;\" class=\"maineditor\" tappable [placeholder]=\"placeholderText\">\r\n  \r\n    </ion-textarea>\r\n  \r\n</div>\r\n\r\n  `;\r\n\r\n  const STYLE = `.rich-text [contenteditable=true] {\r\n    -webkit-user-select: auto !important;\r\n    padding: 2px;\r\n    margin: 2px;\r\n    border: 1px solid #CECECE;\r\n    overflow-x: scroll;\r\n    overflow-y: auto;\r\n    word-wrap: normal;\r\n    height: 20vh;\r\n    background-color: #fff;\r\n  }\r\n  .rich-text [contenteditable=true] img {\r\n    padding-left: 2px;\r\n    max-width: 95%;\r\n  }\r\n  .rich-text [contenteditable=true]:empty:before {\r\n    content: attr(data-placeholder-text);\r\n    display: block;\r\n    color: lightgrey;\r\n    font-weight: bold;\r\n  }\r\n  .rich-text div.decorator {\r\n    margin: 5px 1px 5px 1px;\r\n    text-align: center;\r\n  }\r\n  .rich-text div.decorator button {\r\n    background: #444;\r\n    color: #fff;\r\n    font-size: 1.1em;\r\n    height: 35px;\r\n    min-width: 30px;\r\n    padding-left: 1px;\r\n    padding-right: 1px;\r\n  }\r\n  \r\n  `;\r\n\r\n\r\nexport interface RichTextOptions {\r\n  undo?: boolean;\r\n  redo?: boolean;\r\n  bold?: boolean;\r\n  italic?: boolean;\r\n  underline?: boolean;\r\n  largeText?: boolean;\r\n  smallText?: boolean;\r\n  alignLeft?: boolean;\r\n  alignCenter?: boolean;\r\n  alignRight?: boolean;\r\n  justify?: boolean;\r\n  lineJump?: boolean;\r\n  orderedList?: boolean;\r\n  unorderedList?: boolean;\r\n  strikethrough?: boolean;\r\n  canClose?: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'rich-text',\r\n  template: HTML,\r\n  styles: [STYLE]\r\n})\r\nexport class RichTextComponent implements OnInit {\r\n\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  @ViewChild('editor') editor: TextInput;\r\n  @ViewChild('decorate') decorate: ElementRef;\r\n  @ViewChild('styler') styler: ElementRef;\r\n\r\n  @Input() formControlItem: FormControl;\r\n  @Input() options: RichTextOptions = {};\r\n  @Input() placeholderText: string;\r\n  @Input() canClose: boolean;\r\n\r\n  ngOnInit() {\r\n\r\n\r\n    this.options = {\r\n      undo: this.options.undo != undefined ? this.options.undo : true,\r\n      redo: this.options.redo != undefined ? this.options.redo : true,\r\n      bold: this.options.bold != undefined ? this.options.bold : true,\r\n      italic: this.options.italic != undefined ? this.options.italic : true,\r\n      underline: this.options.underline != undefined ? this.options.underline : true,\r\n      largeText: this.options.largeText != undefined ? this.options.largeText : true,\r\n      smallText: this.options.smallText != undefined ? this.options.smallText : true,\r\n      alignLeft: this.options.alignLeft != undefined ? this.options.alignLeft : true,\r\n      alignCenter: this.options.alignCenter != undefined ? this.options.alignCenter : true,\r\n      alignRight: this.options.alignRight != undefined ? this.options.alignRight : true,\r\n      justify: this.options.justify != undefined ? this.options.justify : true,\r\n      lineJump: this.options.lineJump != undefined ? this.options.lineJump : true,\r\n      orderedList: this.options.orderedList != undefined ? this.options.orderedList : true,\r\n      unorderedList: this.options.unorderedList != undefined ? this.options.unorderedList : true,\r\n      strikethrough: this.options.strikethrough != undefined ? this.options.strikethrough : true,\r\n      canClose: this.options.canClose\r\n    }\r\n  }\r\n\r\n\r\n  uniqueId = `editor${Math.floor(Math.random() * 1000000)}`;\r\n  showDecorator = false;\r\n\r\n  // private stringTools = {\r\n  //   isNullOrWhiteSpace: (value: string) => {\r\n  //     if (value == null || value == undefined) {\r\n  //       return true;\r\n  //     }\r\n  //     value = value.replace(/[\\n\\r]/g, '');\r\n  //     value = value.split(' ').join('');\r\n\r\n  //     return value.length === 0;\r\n  //   }\r\n  // };\r\n\r\n  private updateItem() {\r\n    const element = this.editor.getNativeElement();\r\n    element.innerHTML = this.formControlItem.value;\r\n\r\n\r\n    const reactToChangeEvent = () => {\r\n\r\n      // if (this.stringTools.isNullOrWhiteSpace(element.innerText)) {\r\n      //   element.innerHTML = '<div></div>';\r\n      //   this.formControlItem.setValue(null);\r\n      // } else {\r\n        this.formControlItem.setValue(element.innerHTML);\r\n      // }\r\n    };\r\n\r\n    element.onchange = reactToChangeEvent;\r\n    element.onkeyup = reactToChangeEvent;\r\n    element.onpaste = reactToChangeEvent;\r\n    element.oninput = reactToChangeEvent;\r\n  }\r\n\r\n  private wireupButtons() {\r\n    let buttons = (this.decorate.nativeElement as HTMLDivElement).getElementsByTagName('button');\r\n    for (let i = 0; i < buttons.length; i++) {\r\n      let button = buttons[i];\r\n\r\n      let command = button.getAttribute('data-command');\r\n      if (command) {\r\n        if (command.includes('|')) {\r\n          let parameter = command.split('|')[1];\r\n          command = command.split('|')[0];\r\n\r\n          button.addEventListener('click', () => {\r\n            document.execCommand(command, false, parameter);\r\n            this.editor.getNativeElement().focus();\r\n          });\r\n        } else {\r\n          button.addEventListener('click', () => {\r\n            document.execCommand(command);\r\n            this.editor.getNativeElement().focus();\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n\r\n    this.updateItem();\r\n    this.wireupButtons();\r\n\r\n  }\r\n\r\n  toggleDecorator(){\r\n    this.showDecorator = !this.showDecorator;\r\n    this.editor.getNativeElement().focus();\r\n  }\r\n\r\n}\r\n"]}